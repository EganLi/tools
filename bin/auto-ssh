#!/usr/bin/python

import sys
import pexpect
import configparser
import struct
import fcntl
import termios
sys.path.append("../lib/")
import tp

configPath = "../etc/hostList.ini"

def getWinSize():
    if 'TIOCGWINSZ' in dir(termios):
        TIOCGWINSZ = termios.TIOCGWINSZ
    else:
        TIOCGWINSZ = 1074295912
    s = struct.pack('HHHH', 0, 0, 0, 0)
    x = fcntl.ioctl(sys.stdout.fileno(), TIOCGWINSZ, s)
    return struct.unpack('HHHH', x)[0:2]

def generateCmd(cf, NUM):
    USER_NUM = cf.sections()
    sshCmd = "ssh -p %s %s@%s" % (cf.get(USER_NUM[NUM], "port"), cf.get(USER_NUM[NUM], "user"), cf.get(USER_NUM[NUM], "ip"))
    return sshCmd, cf.get(USER_NUM[NUM], "passwd")

def generateSSHCmd():
    cf = tp.readConfig(configPath)
    NUM = tp.selectHost(cf)
    if NUM is None:
        sys.exit()
    return generateCmd(cf, NUM)

def autoLogin(loginCmd):
    if loginCmd is None:
        return None

    process = pexpect.spawn(loginCmd[0])

    idx = process.expect(['[Pp]assword', '[Uu]navailable', pexpect.EOF, pexpect.TIMEOUT], timeout=60)
    if idx == 0:
        process.sendline(loginCmd[1])
    elif idx == 1:
        print("Unavailable")
    elif idx == 2:
        print("Have Error")
    else:
        print("Timeout")
    
    winsize = getWinSize();
    process.setwinsize(winsize[0], winsize[1])

    process.interact()

autoLogin(generateSSHCmd())
